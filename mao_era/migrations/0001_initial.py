# Generated by Django 2.1 on 2019-03-05 19:02

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mao_era.models.blocks
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.core.models
import wagtail.images.blocks
import wagtail.images.models
import wagtail.search.index


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('date_start', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='Enter a valid date (YYYY, YYYY-MM, or YYYY-MM-DD)', regex='^(-)?\\d{4}(-[01][0-9](-[0-3][0-9])?)?$')])),
                ('date_end', models.CharField(blank=True, max_length=11, validators=[django.core.validators.RegexValidator(message='Enter a valid date (YYYY, YYYY-MM, or YYYY-MM-DD)', regex='^(-)?\\d{4}(-[01][0-9](-[0-3][0-9])?)?$')])),
                ('note', wagtail.core.fields.RichTextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ObjectBiographyEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ObjectBiographyPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('byline', models.CharField(max_length=100)),
                ('summary', models.TextField()),
                ('biography', wagtail.core.fields.StreamField([('text', wagtail.core.blocks.RichTextBlock()), ('text_with_image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('image_align', mao_era.models.blocks.AlignmentChoiceBlock()), ('text', wagtail.core.blocks.RichTextBlock())]))])),
                ('date_start', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='Enter a valid date (YYYY, YYYY-MM, or YYYY-MM-DD)', regex='^(-)?\\d{4}(-[01][0-9](-[0-3][0-9])?)?$')])),
                ('date_end', models.CharField(blank=True, max_length=11, validators=[django.core.validators.RegexValidator(message='Enter a valid date (YYYY, YYYY-MM, or YYYY-MM-DD)', regex='^(-)?\\d{4}(-[01][0-9](-[0-3][0-9])?)?$')])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ObjectBiographySource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('biography', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='sources', to='mao_era.ObjectBiographyPage')),
            ],
        ),
        migrations.CreateModel(
            name='ObjectBiographyTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='mao_era.ObjectBiographyPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mao_era_objectbiographytag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SourceImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('file', models.ImageField(height_field='height', upload_to=wagtail.images.models.get_upload_to, verbose_name='file', width_field='width')),
                ('width', models.IntegerField(editable=False, verbose_name='width')),
                ('height', models.IntegerField(editable=False, verbose_name='height')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('focal_point_x', models.PositiveIntegerField(blank=True, null=True)),
                ('focal_point_y', models.PositiveIntegerField(blank=True, null=True)),
                ('focal_point_width', models.PositiveIntegerField(blank=True, null=True)),
                ('focal_point_height', models.PositiveIntegerField(blank=True, null=True)),
                ('file_size', models.PositiveIntegerField(editable=False, null=True)),
                ('file_hash', models.CharField(blank=True, editable=False, max_length=40)),
                ('caption', wagtail.core.fields.RichTextField(blank=True)),
                ('collection', models.ForeignKey(default=wagtail.core.models.get_root_collection_id, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.Collection', verbose_name='collection')),
                ('uploaded_by_user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='uploaded by user')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='SourceImageRendition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter_spec', models.CharField(db_index=True, max_length=255)),
                ('file', models.ImageField(height_field='height', upload_to=wagtail.images.models.get_rendition_upload_to, width_field='width')),
                ('width', models.IntegerField(editable=False)),
                ('height', models.IntegerField(editable=False)),
                ('focal_point_key', models.CharField(blank=True, default='', editable=False, max_length=16)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='renditions', to='mao_era.SourceImage')),
            ],
        ),
        migrations.CreateModel(
            name='SourcePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('source_type', models.CharField(choices=[('audio', 'Audio'), ('image', 'Image'), ('text', 'Text'), ('video', 'Video')], max_length=5)),
                ('copyright_statement', wagtail.core.fields.RichTextField()),
                ('origin', wagtail.core.fields.RichTextField()),
                ('text', wagtail.core.fields.RichTextField(blank=True)),
                ('source_url', models.URLField(blank=True)),
                ('text_file', models.FileField(blank=True, null=True, upload_to='')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SourcePageImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sources', to='mao_era.SourceImage')),
                ('source', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='mao_era.SourcePage')),
            ],
        ),
        migrations.CreateModel(
            name='TimelinePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='objectbiographysource',
            name='source',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='biographies', to='mao_era.SourcePage'),
        ),
        migrations.AddField(
            model_name='objectbiographypage',
            name='featured_image',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.PROTECT, related_name='featured_biographies', to='mao_era.SourcePage', unique=True),
        ),
        migrations.AddField(
            model_name='objectbiographypage',
            name='related_objects',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='mao_era.ObjectBiographyPage'),
        ),
        migrations.AddField(
            model_name='objectbiographypage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='mao_era.ObjectBiographyTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='objectbiographyevent',
            name='biography',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='mao_era.ObjectBiographyPage'),
        ),
        migrations.AddField(
            model_name='objectbiographyevent',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biographies', to='mao_era.Event'),
        ),
        migrations.AlterUniqueTogether(
            name='sourcepageimage',
            unique_together={('source', 'image')},
        ),
        migrations.AlterUniqueTogether(
            name='sourceimagerendition',
            unique_together={('image', 'filter_spec', 'focal_point_key')},
        ),
        migrations.AlterUniqueTogether(
            name='objectbiographysource',
            unique_together={('biography', 'source')},
        ),
        migrations.AlterUniqueTogether(
            name='objectbiographyevent',
            unique_together={('biography', 'event')},
        ),
    ]
